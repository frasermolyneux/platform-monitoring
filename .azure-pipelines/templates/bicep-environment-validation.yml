parameters:
- name: dependsOn
  type: object
  default: []
- name: azureSubscription
  type: string
- name: environment
  type: string
- name: environmentName
  type: string
- name: environmentTag
  type: string

jobs:
- deployment: ValidateBicepAgainst${{ parameters.environmentName }}Environment
  dependsOn: ${{ parameters.dependsOn }}
  environment: ${{ parameters.environment }}

  workspace:
    clean: all

  strategy:
    runOnce:
      deploy:
        steps:
          - checkout: self

          - task: AzureCLI@2
            name: RunPreflightValidation
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              addSpnToEnvironment: true
              inlineScript: |
                $deployPrincipalId = (az ad sp show --id $env:servicePrincipalId | ConvertFrom-Json).id

                az deployment sub validate `
                  --name 'strategicKeyVault${{ parameters.environmentName }}' `
                  --template-file bicep/platformKeyVault.bicep `
                  --location 'uksouth' `
                  --parameters @params/platformKeyVault.${{ parameters.environmentTag }}.json `
                      parPlatformKeyVaultCreateMode='recover' `
                      parDeployPrincipalId=$deployPrincipalId

                $keyVaults = az keyvault list --query '[].id' | ConvertFrom-Json
                $existing = $keyVaults | where {$_ -match 'rg-platform-monitoring-*.*-${{ parameters.environmentTag }}-uksouth'}

                az deployment sub validate `
                  --name 'platformMonitoring${{ parameters.environmentName }}' `
                  --template-file bicep/platform.bicep `
                  --location 'uksouth' `
                  --parameters @params/platform.${{ parameters.environmentTag }}.json `
                      parPlatformKeyVaultCreateMode=$keyVaultCreateMode `
                      parDeployPrincipalId=$deployPrincipalId

                $deployment = az deployment sub show --name platformMonitoring${{ parameters.environmentName }} 2>$null

                if ($null -ne $deployment) { 
                  $resourceGroupName = ($deployment | ConvertFrom-Json).properties.outputs.resourceGroupName

                  az deployment group validate `
                    --name 'servicesMonitoring${{ parameters.environmentName }}' `
                    --resource-group $resourceGroupName `
                    --template-file $(Build.sourcesDirectory)/bicep/services.bicep `
                    --parameters @$(Build.sourcesDirectory)/params/services.${{ parameters.environmentTag }}.json
                }

          - task: AzureCLI@2
            name: RunWhatIfDeploy
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az deployment sub what-if `
                  --name 'platformMonitoring${{ parameters.environmentName }}' `
                  --template-file bicep/platform.bicep `
                  --location 'uksouth' `
                  --parameters @params/platform.${{ parameters.environmentTag }}.json

                $deployment = az deployment sub show --name platformMonitoring${{ parameters.environmentName }} 2>$null

                if ($null -ne $deployment) { 
                  $resourceGroupName = ($deployment | ConvertFrom-Json).properties.outputs.resourceGroupName

                  az deployment group what-if `
                    --name 'servicesMonitoring${{ parameters.environmentName }}' `
                    --resource-group $resourceGroupName `
                    --template-file $(Build.sourcesDirectory)/bicep/services.bicep `
                    --parameters @$(Build.sourcesDirectory)/params/services.${{ parameters.environmentTag }}.json
                }
